name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    - name: Install dependencies
      run: npm install
    - name: Run Linter
      run: npx eslint .

  build-and-deploy:
    needs: CI
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build -t gcr.io/${{ secrets.GCP_PROJECT }}/simple-web-app:$GITHUB_SHA .

    - name: Create credentials for Docker
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2.1.0
      with:
        project_id: ${{ secrets.GCP_PROJECT }}

    - name: Push Docker image to Artifact Registry
      run: |
        gcloud auth configure-docker --quiet
        docker push gcr.io/${{ secrets.GCP_PROJECT }}/simple-web-app:${GITHUB_SHA}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Initialize
      run: |
        cd terraform
        terraform init

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve
      env:
        TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}
        TF_VAR_docker_image: gcr.io/${{ secrets.GCP_PROJECT }}/my-app:$GITHUB_SHA

env:
    GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
    GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
    TF_VAR_docker_image: gcr.io/${{ secrets.GCP_PROJECT }}/simple-web-app:${GITHUB_SHA}